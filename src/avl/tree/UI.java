/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package avl.tree;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import javax.swing.JScrollPane;

/**
 *
 * @author Santi Mercado
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    public Tree tree;
    int xa;
    int ya;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */    public UI(Tree t) {
        initComponents();
        this.tree = t;
        xa = 0;
        ya = 0;
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        add = new javax.swing.JButton();
        del = new javax.swing.JButton();
        search = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        val = new javax.swing.JTextField();
        gramps = new javax.swing.JButton();
        uncle = new javax.swing.JButton();
        prompt = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        add.setText("Añadir");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 124, -1, -1));

        del.setText("Eliminar");
        del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delActionPerformed(evt);
            }
        });
        getContentPane().add(del, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 124, -1, -1));

        search.setText("Buscar");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(523, 124, -1, -1));

        jLabel1.setText("Ingrese el valor del Nodo y seleccione la acción que desea realizar:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(338, 71, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel2.setText("Árbol Binario de Búsqueda Autobalanceable");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 11, -1, -1));
        getContentPane().add(val, new org.netbeans.lib.awtextra.AbsoluteConstraints(772, 68, 100, -1));

        gramps.setText("Encontrar abuelo");
        gramps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grampsActionPerformed(evt);
            }
        });
        getContentPane().add(gramps, new org.netbeans.lib.awtextra.AbsoluteConstraints(637, 124, -1, -1));

        uncle.setText("Encontrar tío");
        uncle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uncleActionPerformed(evt);
            }
        });
        getContentPane().add(uncle, new org.netbeans.lib.awtextra.AbsoluteConstraints(805, 124, -1, -1));

        prompt.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        prompt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(prompt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 155, 1178, 40));

        jButton1.setText("Encontrar nivel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(948, 124, -1, -1));

        jButton2.setText("Árbol a texto");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 124, -1, -1));
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 20, -1, -1));
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 1140, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    @Override
    public void paintComponents(Graphics g){  //We override the paintComponents method.
        //super.paintComponents(g); For some reason this bugs the Frame.
        this.revalidate(); 
        int X2 = (getWidth()/12);
        int Y = getHeight()/12;
        //I couldn't figure out how to make the scroll panel work and I got tilted. So uhm sorry.
        pseudoclear(jPanel2.getGraphics()); //We draw a white rectangle the size of the frame.
        int X = (getWidth()/5);//*tree.GetHeight(tree.root);
        if (tree.GetHeight(tree.root) >=5){            
           pintaArbol(jPanel2.getGraphics(), tree.root, (this.getWidth()-tree.GetHeight(tree.root)*13)/2, Y, X2, Y,0);  //This paints the lines and the circles that represent the tree
        } else { //Truth be told, most of the x and y components are merely trial and error mixed with some that I saw in the internet.
            pintaArbol(jPanel2.getGraphics(), tree.root, this.getWidth()/2, Y, X2, Y,0);  
        }
        
        
    }
    
    
    
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        prompt.setText("");   //All of the buttons function the same, so I'll only explain it once (They're literally a copy paste of this but changing 1 or 2 lines).
        if (val.getText().isEmpty()){ //First we check if the user entered a valid number
            prompt.setText("Por favor ingrese un número");  //Input something
        } else {
            if (val.getText().chars().allMatch(Character :: isDigit) == true){ //Only numbers
                int number = Integer.parseInt(val.getText());
                if (number > 999 || number < -99){
                   prompt.setText("Por favor ingrese un número de 3 dígitos o menos"); //A number of 3 digits or less 
                }  else {
                if(tree.SearchNode(tree.root, number) != null){ //Once we verify that the input is a valid number, we call SearchNode to verify if a node with the given value exists.
                    prompt.setText("Ya existe un nodo con ese valor");
                } else {
                tree.AddNode(number); //In this case we are adding a Node, so we call AddNode. In the other buttons, we simply call a different subroutine here (DeleteNode, SeacrhGramps, etc).
                paintComponents(jPanel2.getGraphics()); //At last, after adding or deleting a node, we repaint the tree.
                }
                }
            } else {
                prompt.setText("Por favor ingrese un número entero válido");
            }
        }
    }//GEN-LAST:event_addActionPerformed

    private void delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delActionPerformed
        prompt.setText("");
        if (val.getText().isEmpty()){
            prompt.setText("Por favor ingrese un número");
        } else {
            if (val.getText().chars().allMatch(Character :: isDigit) == true){
                int number = Integer.parseInt(val.getText());
                if (number > 999 || number < -99){
                   prompt.setText("Por favor ingrese un número de 3 dígitos o menos"); 
                }  else {
                if(tree.SearchNode(tree.root, number) == null){
                    prompt.setText("No existe un nodo con ese valor");
                } else {
                tree.DeleteNode(number);
                paintComponents(jPanel2.getGraphics());
                //tree.NormalTraverse(tree.root);
                }
                }
            } else {
                prompt.setText("Por favor ingrese un número entero válido");
            }
        } 
    }//GEN-LAST:event_delActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        prompt.setText("");
        if (val.getText().isEmpty()){
            prompt.setText("Por favor ingrese un número");
        } else {
            if (val.getText().chars().allMatch(Character :: isDigit) == true){
                int number = Integer.parseInt(val.getText());
                if (number > 999 || number < -99){
                   prompt.setText("Por favor ingrese un número de 3 dígitos o menos"); 
                }  else {
                if(tree.SearchNode(tree.root, number) == null){
                    prompt.setText("No existe un nodo con ese valor");
                } else {
                    prompt.setText("Existe un nodo con ese valor en el arbol");
                }
                }
            } else {
                prompt.setText("Por favor ingrese un número entero válido");
            }
        } 
    }//GEN-LAST:event_searchActionPerformed

    private void grampsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grampsActionPerformed
        prompt.setText("");
        if (val.getText().isEmpty()){
            prompt.setText("Por favor ingrese un número");
        } else {
            if (val.getText().chars().allMatch(Character :: isDigit) == true){
                int number = Integer.parseInt(val.getText());
                if (number > 999 || number < -99){
                   prompt.setText("Por favor ingrese un número de 3 dígitos o menos"); 
                }  else {
                if(tree.SearchNode(tree.root, number) == null){
                    prompt.setText("No existe un nodo con ese valor");
                } else {
                   if(tree.FindGramps(number) == null){
                    prompt.setText("El nodo no tiene abuelo");
                } else {
                    prompt.setText("El nodo tiene un abuelo con valor de " + tree.FindGramps(number).value);
                } 
                }
                }
            } else {
                prompt.setText("Por favor ingrese un número entero válido");
            }
        }
    }//GEN-LAST:event_grampsActionPerformed

    private void uncleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uncleActionPerformed
        prompt.setText("");
        if (val.getText().isEmpty()){
            prompt.setText("Por favor ingrese un número");
        } else {
            if (val.getText().chars().allMatch(Character :: isDigit) == true){
                int number = Integer.parseInt(val.getText());
                if (number > 999 || number < -99){
                   prompt.setText("Por favor ingrese un número de 3 dígitos o menos"); 
                }  else {
                if(tree.SearchNode(tree.root, number) == null){
                    prompt.setText("No existe un nodo con ese valor");
                } else {
                   if(tree.FindUncle(number) == null){
                    prompt.setText("El nodo no tiene tío");
                } else {
                    prompt.setText("El nodo tiene un tío con valor de " + tree.FindUncle(number).value);
                } 
                }
                }
            } else {
                prompt.setText("Por favor ingrese un número entero válido");
            }
        } 
    }//GEN-LAST:event_uncleActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        tree.NormalTraverse(tree.root, 0);
        prompt.setText("Mira la consola de Netbeans ;)");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        prompt.setText("");
        if (val.getText().isEmpty()){
            prompt.setText("Por favor ingrese un número");
        } else {
            if (val.getText().chars().allMatch(Character :: isDigit) == true){
                int number = Integer.parseInt(val.getText());
                if (number > 999 || number < -99){
                   prompt.setText("Por favor ingrese un número de 3 dígitos o menos"); 
                }  else {
                if(tree.SearchNode(tree.root, number) == null){
                    prompt.setText("No existe un nodo con ese valor");
                } else {
                    prompt.setText("El nodo se encuentra en el nivel " + tree.NodeLevel(tree.SearchNode(tree.root, number)));
                }
                }
            } else {
                prompt.setText("Por favor ingrese un número entero válido");
            }
        } 
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new UI(Tree t).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton del;
    private javax.swing.JButton gramps;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel prompt;
    private javax.swing.JButton search;
    private javax.swing.JButton uncle;
    private javax.swing.JTextField val;
    // End of variables declaration//GEN-END:variables

    private void pintaArbol(Graphics g, Node n, int x, int y,int xoff,int yoff,int nivel){
     if (n == null){
         return;
     }
     g.setColor(Color.black); //We set the brush black
     if(n.left!= null){
         g.drawLine(x, y, (int) (x-xoff*tree.GetHeight(n)*tree.GetHeight(n)*0.2), y + yoff);
     }
     if(n.right!= null){
         g.drawLine(x, y, (int) (x+xoff*tree.GetHeight(n)*tree.GetHeight(n)*0.2), y + yoff); //We draw lines toward the child node if they exist.
     }
    
        g.fillOval(x-10, y-20, 30, 30); //We draw a circle representing the node  
    
     
     g.setColor(Color.white); //We change the brush to white and draw the node's value inside the circle.
     g.drawString(n.value+"", x-3 , y );
     xa = x;
     ya = y;
     pintaArbol(g, n.left, (int)(x-xoff*tree.GetHeight(n)*tree.GetHeight(n)*0.2), (y + yoff),xoff+nivel*2,yoff,nivel+1); //We keep drawing the nodes until we get to te bottom fo the tree.
     pintaArbol(g, n.right, (int)(x+xoff*tree.GetHeight(n)*tree.GetHeight(n)*0.2), (y + yoff),xoff-nivel*2,yoff,nivel+1);
    }
    
    private void pseudoclear(Graphics g){
        g.setColor(Color.white);
        g.fillRect(0, 0, jPanel2.getWidth()-17, jPanel2.getHeight()-17); //We draw a white rectangle that covers the wole panel. (I couldn't make the super.paintComponents work so I had to improvise XD).
                
    }
    

  
}
